import { corpoColors } from '../../../data/_data';
import { svgTransition } from '../../../utils/framerMotion/framerMotionUtils';
import { letters } from './SVG_10_data';
/**Framer Motion Staff*/
import { motion } from 'framer-motion';

const container = {
  animate: { transition: { staggerChildren: 0.15 } },
};
const item = {
  initial: { opacity: 0, y: '5%' },
  animate: {
    opacity: 1,
    y: 0,
    // transition: { duration: 1, ease: [0.6, 0.01, -0.05, 0.95] },
    transition: {
      ease: 'easeInOut',
      duration: 1,
    },
  },
};

/**---------------------------------------------**/
const SVG_10_d: React.FC<{ className: string; letterStyle?: string }> = ({
  className,
  letterStyle,
}) => {
  /**JSX**/
  return (
    <svg
      aria-label="Animowany element"
      role="presentation"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      viewBox="0 0 300 300"
    >
      <motion.path
        fill={corpoColors.orange}
        d="M189.66 41.348H206.738V58.426H189.66z"
        initial={{ rotate: 0 }}
        animate={{ rotate: 360 }}
        transition={{ ease: 'linear', duration: 6, repeat: Infinity }}
      ></motion.path>
      <motion.path
        fill={corpoColors.orange}
        d="M113.27 156.12H130.34799999999998V173.198H113.27z"
        initial={{ rotate: 0 }}
        animate={{ rotate: -360 }}
        transition={{ ease: 'linear', duration: 8, repeat: Infinity }}
      ></motion.path>
      <motion.g
        initial={{ opacity: 0 }}
        animate={{ opacity: 1, transition: { duration: 1, delay: 1.6 } }}
      >
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.249"
          d="M2.268 38.583H37.05"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.787"
          d="M7.76 151.96V50.16"
        ></path>
        <path
          fill={corpoColors.light}
          strokeWidth="3.601"
          d="M7.684 288.2l3.879-13.634-3.879 1.095-3.878-1.095zM7.684 38.65L3.806 52.284l3.878-1.095 3.879 1.095z"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.249"
          d="M1.225 288.36H37.05"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.785"
          d="M7.76 174.99v101.27"
        ></path>
        <g fill={corpoColors.light} strokeWidth="1.055">
          <path d="M5.813 168.54H4.758v-6.72q-.38.363-1.002.726-.615.363-1.107.545v-1.02q.885-.416 1.547-1.008.662-.591.937-1.148h.68zM8.514 164.3q0-1.523.31-2.45.317-.93.932-1.435.621-.504 1.559-.504.691 0 1.213.282.521.275.861.802.34.522.533 1.278.194.75.194 2.027 0 1.512-.31 2.443-.311.926-.932 1.436-.616.504-1.559.504-1.242 0-1.951-.89-.85-1.073-.85-3.493zm1.084 0q0 2.115.492 2.818.498.698 1.225.698.727 0 1.219-.703.498-.704.498-2.813 0-2.121-.498-2.818-.492-.698-1.23-.698-.727 0-1.16.616-.546.785-.546 2.9z"></path>
        </g>
      </motion.g>

      <motion.g
        initial={{ opacity: 0 }}
        animate={{ opacity: 1, transition: { duration: 1, delay: 1.6 } }}
      >
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.249"
          d="M287.57 1.345v35.169"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.78"
          d="M176.58 8.072h100"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.249"
          d="M37.792 1.327v35.187"
        ></path>
        <path
          fill="none"
          stroke={corpoColors.light}
          strokeWidth="0.786"
          d="M151.17 8.072H49.69"
        ></path>
        <path
          fill={corpoColors.light}
          strokeWidth="3.601"
          d="M37.944 8.02l13.634 3.878-1.095-3.879 1.095-3.878zM287.28 8.02l-13.634 3.878 1.095-3.879-1.095-3.878z"
        ></path>
        <g fill={corpoColors.light} strokeWidth="1.055">
          <path d="M160.8 12.027h-1.055v-6.72q-.38.363-1.002.726-.615.363-1.107.545v-1.02q.885-.416 1.547-1.008.662-.591.937-1.148h.68zM163.5 7.791q0-1.523.31-2.45.317-.93.932-1.435.621-.504 1.559-.504.691 0 1.213.282.521.275.861.802.34.522.533 1.278.194.75.194 2.027 0 1.512-.311 2.443-.31.926-.932 1.436-.615.504-1.558.504-1.242 0-1.951-.89-.85-1.073-.85-3.493zm1.084 0q0 2.115.492 2.818.498.698 1.225.698.726 0 1.219-.703.498-.704.498-2.813 0-2.121-.498-2.818-.493-.698-1.23-.698-.727 0-1.161.616-.545.785-.545 2.9z"></path>
        </g>
      </motion.g>
      <motion.g variants={container} initial="initial" animate="animate">
        {letters.map(({ d }, i) => (
          <motion.path
            variants={item}
            whileHover={{ scale: 1.05 }}
            transition={svgTransition}
            aria-describedby="svg-description"
            key={i}
            fill={letterStyle ? letterStyle : corpoColors.grey}
            d={d}
          ></motion.path>
        ))}
      </motion.g>
      {/* <g>
        <path
          fill="#9d9e9f"
          d="M88.919 142.19v-9.349q-7.046 11.023-20.721 11.023-8.86 0-16.326-4.884-7.395-4.883-11.512-13.605-4.047-8.79-4.047-20.163 0-11.093 3.698-20.093 3.698-9.07 11.093-13.884 7.396-4.814 16.535-4.814 6.698 0 11.93 2.861 5.233 2.79 8.512 7.326V39.91h12.488v102.28zm-39.698-36.977q0 14.233 6 21.279 6 7.046 14.163 7.046 8.233 0 13.954-6.697 5.79-6.768 5.79-20.581 0-15.21-5.86-22.326-5.86-7.117-14.442-7.117-8.372 0-14.023 6.838-5.581 6.837-5.581 21.558z"
        ></path>
      </g>
      <g>
        <path
          fill="#9d9e9f"
          d="M113.69 142.19v-10.186l47.163-54.14q-8.023.419-14.163.419h-30.209V68.097h60.558v8.302l-40.116 47.023-7.744 8.581q8.442-.628 15.837-.628h34.256v10.814z"
        ></path>
      </g>
      <g>
        <path fill="#9d9e9f" d="M191.83 142.19V68.097h12.558v74.093z"></path>
      </g>
      <g>
        <path
          fill="#9d9e9f"
          d="M274.22 118.33l12.977 1.605q-3.07 11.372-11.372 17.65-8.302 6.28-21.209 6.28-16.256 0-25.814-9.977-9.488-10.047-9.488-28.116 0-18.698 9.627-29.023 9.628-10.326 24.977-10.326 14.86 0 24.28 10.116t9.418 28.465q0 1.116-.07 3.349H232.29q.698 12.209 6.907 18.698 6.21 6.488 15.488 6.488 6.907 0 11.791-3.628t7.745-11.58zm-41.233-20.302h41.372q-.837-9.349-4.744-14.023-6-7.256-15.558-7.256-8.651 0-14.581 5.79-5.86 5.792-6.489 15.489z"
        ></path>
      </g>
      <g>
        <path
          fill="#9d9e9f"
          d="M39.237 236.26l12.433-1.956q1.048 7.474 5.797 11.455 4.82 3.982 13.411 3.982 8.661 0 12.852-3.493 4.191-3.562 4.191-8.311 0-4.261-3.702-6.706-2.584-1.676-12.852-4.26-13.83-3.493-19.208-6.007-5.308-2.585-8.102-7.055-2.724-4.54-2.724-9.988 0-4.959 2.235-9.15 2.305-4.26 6.217-7.054 2.933-2.165 7.962-3.632 5.099-1.537 10.896-1.537 8.73 0 15.296 2.515 6.635 2.514 9.778 6.845 3.144 4.26 4.331 11.455l-12.293 1.676q-.838-5.727-4.89-8.94-3.98-3.213-11.314-3.213-8.661 0-12.363 2.863-3.702 2.864-3.702 6.706 0 2.444 1.536 4.4 1.537 2.025 4.82 3.352 1.886.699 11.106 3.213 13.34 3.563 18.579 5.868 5.308 2.235 8.312 6.565 3.003 4.33 3.003 10.756 0 6.286-3.702 11.874-3.632 5.518-10.547 8.591-6.915 3.004-15.646 3.004-14.458 0-22.072-6.007-7.543-6.007-9.639-17.811z"
        ></path>
      </g>
      <g>
        <path fill="#9d9e9f" d="M115.86 258.4v-74.177h12.572V258.4z"></path>
      </g>
      <g>
        <path
          fill="#9d9e9f"
          d="M198.35 234.52l12.991 1.607q-3.073 11.385-11.385 17.67-8.312 6.287-21.233 6.287-16.274 0-25.843-9.988-9.5-10.058-9.5-28.148 0-18.72 9.64-29.056t25.005-10.337q14.877 0 24.307 10.128 9.429 10.128 9.429 28.497 0 1.117-.07 3.352h-55.319q.699 12.223 6.915 18.72 6.216 6.495 15.506 6.495 6.915 0 11.804-3.632 4.89-3.632 7.753-11.595zm-41.279-20.325h41.419q-.838-9.36-4.75-14.039-6.006-7.264-15.576-7.264-8.66 0-14.598 5.797-5.867 5.798-6.495 15.506zm32.409 44.213q-3.981 2.445-6.216 6.007-2.166 3.632-2.166 7.334 0 2.933 1.607 4.959 1.606 2.025 5.238 2.025 1.607 0 3.283-.489 1.677-.419 3.074-1.187v8.94q-5.1 2.445-9.5 2.445-3.562 0-6.216-1.048-2.654-.977-4.47-2.794-1.747-1.746-2.655-4.05-.838-2.306-.838-4.96 0-4.47 2.515-9.01 2.514-4.47 7.124-8.172z"
        ></path>
      </g>
      <g>
        <path
          fill="#9d9e9f"
          d="M275.53 231.23l12.363 1.607q-2.026 12.782-10.407 20.046-8.312 7.194-20.465 7.194-15.227 0-24.516-9.918-9.22-9.989-9.22-28.567 0-12.015 3.982-21.025 3.98-9.01 12.083-13.48 8.172-4.54 17.74-4.54 12.084 0 19.768 6.147 7.683 6.077 9.848 17.322l-12.223 1.886q-1.746-7.474-6.216-11.245-4.4-3.772-10.687-3.772-9.5 0-15.436 6.845-5.938 6.775-5.938 21.513 0 14.947 5.728 21.722t14.947 6.775q7.404 0 12.363-4.54t6.286-13.969zm-28.218-56.227l9.29-19.557h16.484l-15.366 19.557z"
        ></path>
      </g> */}
    </svg>
  );
};
export default SVG_10_d;

// return (
//   <svg
//     xmlns="http://www.w3.org/2000/svg"
//     className={className}
//     viewBox="0 0 300 300"
//   >

//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.249"
//       d="M2.268 38.583H37.05"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.787"
//       d="M7.76 151.96V50.16"
//     ></path>
//     <path
//       fill={corpoColors.light}
//       strokeWidth="3.601"
//       d="M7.684 288.2l3.879-13.634-3.879 1.095-3.878-1.095zM7.684 38.65L3.806 52.284l3.878-1.095 3.879 1.095z"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.249"
//       d="M1.225 288.36H37.05"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.785"
//       d="M7.76 174.99v101.27"
//     ></path>
//     <text
//       x="1.342"
//       y="168.541"
//       style={{
//         fontVariantCaps: 'normal',
//         fontVariantEastAsian: 'normal',
//         fontVariantLigatures: 'normal',
//         fontVariantNumeric: 'normal',
//         lineHeight: '0.9',
//       }}
//       fill={corpoColors.light}
//       strokeWidth="1.055"
//       fontFamily="Arial"
//       fontSize="12"
//       letterSpacing="0"
//     >
//       <tspan
//         x="1.342"
//         y="168.541"
//         style={{
//           fontVariantCaps: 'normal',
//           fontVariantEastAsian: 'normal',
//           fontVariantLigatures: 'normal',
//           fontVariantNumeric: 'normal',
//         }}
//       >
//         10
//       </tspan>
//     </text>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.249"
//       d="M287.57 1.345v35.169"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.78"
//       d="M176.58 8.072h100"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.249"
//       d="M37.792 1.327v35.187"
//     ></path>
//     <path
//       fill="none"
//       stroke={corpoColors.light}
//       strokeWidth="0.786"
//       d="M151.17 8.072H49.69"
//     ></path>
//     <text
//       x="156.331"
//       y="12.027"
//       style={{
//         fontVariantCaps: 'normal',
//         fontVariantEastAsian: 'normal',
//         fontVariantLigatures: 'normal',
//         fontVariantNumeric: 'normal',
//         lineHeight: '0.9',
//       }}
//       fill={corpoColors.light}
//       strokeWidth="1.055"
//       fontFamily="Arial"
//       fontSize="12"
//       letterSpacing="0"
//     >
//       <tspan
//         x="156.331"
//         y="12.027"
//         style={{
//           fontVariantCaps: 'normal',
//           fontVariantEastAsian: 'normal',
//           fontVariantLigatures: 'normal',
//           fontVariantNumeric: 'normal',
//         }}
//       >
//         10
//       </tspan>
//     </text>
//     <path
//       fill="#9d9e9f"
//       d="M88.919 142.19v-9.349q-7.046 11.023-20.721 11.023-8.86 0-16.326-4.884-7.395-4.883-11.512-13.605-4.047-8.79-4.047-20.163 0-11.093 3.698-20.093 3.698-9.07 11.093-13.884 7.396-4.814 16.535-4.814 6.698 0 11.93 2.861 5.233 2.79 8.512 7.326V39.91h12.488v102.28zm-39.698-36.977q0 14.233 6 21.279 6 7.046 14.163 7.046 8.233 0 13.954-6.697 5.79-6.768 5.79-20.581 0-15.21-5.86-22.326-5.86-7.117-14.442-7.117-8.372 0-14.023 6.838-5.581 6.837-5.581 21.558zM113.69 142.19v-10.186l47.163-54.14q-8.023.419-14.163.419h-30.209V68.097h60.558v8.302l-40.116 47.023-7.744 8.581q8.442-.628 15.837-.628h34.256v10.814zM191.83 142.19V68.097h12.558v74.093zM274.22 118.33l12.977 1.605q-3.07 11.372-11.372 17.65-8.302 6.28-21.209 6.28-16.256 0-25.814-9.977-9.488-10.047-9.488-28.116 0-18.698 9.627-29.023 9.628-10.326 24.977-10.326 14.86 0 24.28 10.116t9.418 28.465q0 1.116-.07 3.349H232.29q.698 12.209 6.907 18.698 6.21 6.488 15.488 6.488 6.907 0 11.791-3.628t7.745-11.58zm-41.233-20.302h41.372q-.837-9.349-4.744-14.023-6-7.256-15.558-7.256-8.651 0-14.581 5.79-5.86 5.792-6.489 15.489zM39.237 236.26l12.433-1.956q1.048 7.474 5.797 11.455 4.82 3.982 13.411 3.982 8.661 0 12.852-3.493 4.191-3.562 4.191-8.311 0-4.261-3.702-6.706-2.584-1.676-12.852-4.26-13.83-3.493-19.208-6.007-5.308-2.585-8.102-7.055-2.724-4.54-2.724-9.988 0-4.959 2.235-9.15 2.305-4.26 6.217-7.054 2.933-2.165 7.962-3.632 5.099-1.537 10.896-1.537 8.73 0 15.296 2.515 6.635 2.514 9.778 6.845 3.144 4.26 4.331 11.455l-12.293 1.676q-.838-5.727-4.89-8.94-3.98-3.213-11.314-3.213-8.661 0-12.363 2.863-3.702 2.864-3.702 6.706 0 2.444 1.536 4.4 1.537 2.025 4.82 3.352 1.886.699 11.106 3.213 13.34 3.563 18.579 5.868 5.308 2.235 8.312 6.565 3.003 4.33 3.003 10.756 0 6.286-3.702 11.874-3.632 5.518-10.547 8.591-6.915 3.004-15.646 3.004-14.458 0-22.072-6.007-7.543-6.007-9.639-17.811zM115.86 258.4v-74.177h12.572V258.4zM198.35 234.52l12.991 1.607q-3.073 11.385-11.385 17.67-8.312 6.287-21.233 6.287-16.274 0-25.843-9.988-9.5-10.058-9.5-28.148 0-18.72 9.64-29.056t25.005-10.337q14.877 0 24.307 10.128 9.429 10.128 9.429 28.497 0 1.117-.07 3.352h-55.319q.699 12.223 6.915 18.72 6.216 6.495 15.506 6.495 6.915 0 11.804-3.632 4.89-3.632 7.753-11.595zm-41.279-20.325h41.419q-.838-9.36-4.75-14.039-6.006-7.264-15.576-7.264-8.66 0-14.598 5.797-5.867 5.798-6.495 15.506zm32.409 44.213q-3.981 2.445-6.216 6.007-2.166 3.632-2.166 7.334 0 2.933 1.607 4.959 1.606 2.025 5.238 2.025 1.607 0 3.283-.489 1.677-.419 3.074-1.187v8.94q-5.1 2.445-9.5 2.445-3.562 0-6.216-1.048-2.654-.977-4.47-2.794-1.747-1.746-2.655-4.05-.838-2.306-.838-4.96 0-4.47 2.515-9.01 2.514-4.47 7.124-8.172zM275.53 231.23l12.363 1.607q-2.026 12.782-10.407 20.046-8.312 7.194-20.465 7.194-15.227 0-24.516-9.918-9.22-9.989-9.22-28.567 0-12.015 3.982-21.025 3.98-9.01 12.083-13.48 8.172-4.54 17.74-4.54 12.084 0 19.768 6.147 7.683 6.077 9.848 17.322l-12.223 1.886q-1.746-7.474-6.216-11.245-4.4-3.772-10.687-3.772-9.5 0-15.436 6.845-5.938 6.775-5.938 21.513 0 14.947 5.728 21.722t14.947 6.775q7.404 0 12.363-4.54t6.286-13.969zm-28.218-56.227l9.29-19.557h16.484l-15.366 19.557z"
//     ></path>
//     <motion.rect
//       x="190"
//       y="40"
//       width="18"
//       height="18"
//       fill={corpoColors.orange}
//       initial={{ rotate: 0 }}
//       animate={{ rotate: 360 }}
//       transition={{ ease: 'linear', duration: 6, repeat: Infinity }}
//     />
//     {/* <motion.path
//       // className="animate-spin-slow"
//       fill={corpoColors.orange}
//       d="M189.66 41.348H206.738V58.426H189.66z"
//     ></motion.path> */}
//     <motion.path
//       fill={corpoColors.orange}
//       d="M113.27 156.12H130.34799999999998V173.198H113.27z"
//       initial={{ rotate: 0 }}
//       animate={{ rotate: -360 }}
//       transition={{ ease: 'linear', duration: 8, repeat: Infinity }}
//     ></motion.path>
//     <path
//       fill={corpoColors.light}
//       strokeWidth="3.601"
//       d="M37.944 8.02l13.634 3.878-1.095-3.879 1.095-3.878zM287.28 8.02l-13.634 3.878 1.095-3.879-1.095-3.878z"
//     ></path>
//   </svg>
// );
